<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiandaojia.mapper.product.ProductInformationMapper" >
  <resultMap id="BaseResultMap" type="com.xiandaojia.common.domain.ProductInformation" >
    <id column="information_id" property="informationId" jdbcType="BIGINT" />
    <result column="information_name" property="informationName" jdbcType="VARCHAR" />
    <result column="information_content" property="informationContent" jdbcType="VARCHAR" />
    <result column="information_desc" property="informationDesc" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    information_id, information_name, information_content, information_desc, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_product_information
    where information_id = #{informationId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_product_information
    where information_id = #{informationId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xiandaojia.common.domain.ProductInformation" >
    insert into t_product_information (information_id, information_name, information_content, 
      information_desc, create_time, update_time
      )
    values (#{informationId,jdbcType=BIGINT}, #{informationName,jdbcType=VARCHAR}, #{informationContent,jdbcType=VARCHAR}, 
      #{informationDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiandaojia.common.domain.ProductInformation" >
    insert into t_product_information
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="informationId != null" >
        information_id,
      </if>
      <if test="informationName != null" >
        information_name,
      </if>
      <if test="informationContent != null" >
        information_content,
      </if>
      <if test="informationDesc != null" >
        information_desc,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="informationId != null" >
        #{informationId,jdbcType=BIGINT},
      </if>
      <if test="informationName != null" >
        #{informationName,jdbcType=VARCHAR},
      </if>
      <if test="informationContent != null" >
        #{informationContent,jdbcType=VARCHAR},
      </if>
      <if test="informationDesc != null" >
        #{informationDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiandaojia.common.domain.ProductInformation" >
    update t_product_information
    <set >
      <if test="informationName != null" >
        information_name = #{informationName,jdbcType=VARCHAR},
      </if>
      <if test="informationContent != null" >
        information_content = #{informationContent,jdbcType=VARCHAR},
      </if>
      <if test="informationDesc != null" >
        information_desc = #{informationDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where information_id = #{informationId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiandaojia.common.domain.ProductInformation" >
    update t_product_information
    set information_name = #{informationName,jdbcType=VARCHAR},
      information_content = #{informationContent,jdbcType=VARCHAR},
      information_desc = #{informationDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where information_id = #{informationId,jdbcType=BIGINT}
  </update>
  
	 <select id="getTotalCount" resultType="int">
		select count(1) from
		t_product_information
	</select>

	<select id="queryListByPage" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_product_information
		ORDER BY create_time
		desc
		limit
		#{arg0}, #{arg1}
	</select>
	<select id="queryListByProductId" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		select
		A.information_id, information_name, information_content, information_desc, create_time, update_time
		from t_product_information A
		JOIN t_product_information_relation B ON A.information_id = B.information_id
		where B.product_id = #{productId,jdbcType=BIGINT}
		order by B.information_seqno ASC
	</select>
</mapper>