<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiandaojia.mapper.usercenter.UserMapper" >
  <resultMap id="BaseResultMap" type="com.xiandaojia.common.domain.User" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_member_name" property="userMemberName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_idcard" property="userIdcard" jdbcType="VARCHAR" />
    <result column="user_image" property="userImage" jdbcType="VARCHAR" />
    <result column="user_age" property="userAge" jdbcType="INTEGER" />
    <result column="user_sex" property="userSex" jdbcType="CHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="DATE" />
    <result column="last_login_ip" property="lastLoginIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_account, user_password, user_phone, user_member_name, user_name, user_idcard, 
    user_image, user_age, user_sex, user_email, create_time, update_time, last_login_time, 
    last_login_ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xiandaojia.common.domain.User" >
    insert into t_user (user_id, user_account, user_password, 
      user_phone, user_member_name, user_name, 
      user_idcard, user_image, user_age, 
      user_sex, user_email, create_time, 
      update_time, last_login_time, last_login_ip
      )
    values (#{userId,jdbcType=BIGINT}, #{userAccount,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userPhone,jdbcType=VARCHAR}, #{userMemberName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userIdcard,jdbcType=VARCHAR}, #{userImage,jdbcType=VARCHAR}, #{userAge,jdbcType=INTEGER}, 
      #{userSex,jdbcType=CHAR}, #{userEmail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=DATE}, #{lastLoginIp,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiandaojia.common.domain.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userAccount != null" >
        user_account,
      </if>
      <if test="userPassword != null" >
        user_password,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="userMemberName != null" >
        user_member_name,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userIdcard != null" >
        user_idcard,
      </if>
      <if test="userImage != null" >
        user_image,
      </if>
      <if test="userAge != null" >
        user_age,
      </if>
      <if test="userSex != null" >
        user_sex,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userAccount != null" >
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userMemberName != null" >
        #{userMemberName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userIdcard != null" >
        #{userIdcard,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null" >
        #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null" >
        #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userSex != null" >
        #{userSex,jdbcType=CHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=DATE},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiandaojia.common.domain.User" >
    update t_user
    <set >
      <if test="userAccount != null" >
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null" >
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userMemberName != null" >
        user_member_name = #{userMemberName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userIdcard != null" >
        user_idcard = #{userIdcard,jdbcType=VARCHAR},
      </if>
      <if test="userImage != null" >
        user_image = #{userImage,jdbcType=VARCHAR},
      </if>
      <if test="userAge != null" >
        user_age = #{userAge,jdbcType=INTEGER},
      </if>
      <if test="userSex != null" >
        user_sex = #{userSex,jdbcType=CHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=DATE},
      </if>
      <if test="lastLoginIp != null" >
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiandaojia.common.domain.User" >
    update t_user
    set user_account = #{userAccount,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_member_name = #{userMemberName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_idcard = #{userIdcard,jdbcType=VARCHAR},
      user_image = #{userImage,jdbcType=VARCHAR},
      user_age = #{userAge,jdbcType=INTEGER},
      user_sex = #{userSex,jdbcType=CHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=DATE},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  
	<update id="updatePassword">
		update t_user
		set user_password = #{arg1,jdbcType=VARCHAR}
		where (user_phone = #{arg0})
  </update>
  	<select id="getTotalCount" resultType="int">
		select count(1) from
		t_user
	</select>

	<select id="queryListByPage" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		ORDER BY create_time DESC
		limit
		#{arg0}, #{arg1}
	</select>
	<select id="checkUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		where (user_account = #{arg0} or user_phone = #{arg0}) and user_password =  #{arg1}
  </select>
	<select id="checkUserPhone" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_user
		where (user_phone = #{arg0})
  </select>
</mapper>